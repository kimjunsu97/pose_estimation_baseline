loading annotations into memory...
Done (t=0.30s)
creating index...
index created!
11004
11004
2693
11004
5000
11004
0
11004
2693
[1]
11004
2693
11004
2693
11004
[532481, 458755, 385029, 311303, 393226, 532493, 8211, 327701, 188439, 434204, 401446, 213033, 466986, 213035, 319534, 516143, 32817, 532530, 188465, 434230, 475191, 254016, 131138, 16451, 81988, 376900, 507975, 434247, 204871, 516173, 122962, 98392, 442456, 32861, 213086, 442463, 311392, 311394, 49259, 221291, 442480, 368752, 319607, 417911, 32887, 450686, 32901, 270474, 139, 180383, 82085, 385190, 524456, 90284, 32941, 188592, 229553, 278705, 213171, 336053, 549055, 114884, 508101, 65736, 303305, 344268, 532690, 360661, 16598, 73946, 114907, 426203, 278749, 516318, 229601, 295138, 467176, 319721, 352491, 33005, 458992, 475387, 393469, 57597, 426241, 540932, 106757, 65798, 180487, 213255, 147725, 418062, 147729, 377113, 229659, 147740, 426268, 434459, 205105, 565563, 278848, 368961, 352582, 57672, 74058, 123213, 33104, 336209, 180560, 483667, 8532, 270677, 262487, 491867, 475484, 393569, 549220, 336232, 74092, 467315, 131444, 434548, 532855, 442746, 541055, 426376, 336265, 303499, 369037, 459153, 295316, 377239, 508312, 98716, 106912, 254368, 57760, 156071, 352684, 156076, 475572, 459195, 262587, 238013, 278973, 541123, 33221, 401862, 303566, 508370, 442836, 74200, 229849, 25057, 451043, 336356, 131556, 262631, 205289, 8690, 66038, 352760, 516601, 295420, 360960, 25096, 459272, 205324, 451084, 549390, 180751, 74256, 565778, 205333, 377368, 172571, 500257, 270883, 303653, 98853, 213547, 115245, 500270, 492077, 328238, 377393, 524850, 254516, 295478, 467511, 221754, 287291, 229948, 270908, 516677, 451144, 172617, 492110, 451155, 107094, 123480, 205401, 213593, 33368, 25181, 565853, 49759, 139872, 303713, 213605, 172648, 557672, 172649, 287347, 565877, 230008, 311928, 156292, 8844, 25228, 377486, 361103, 328337, 533145, 369310, 483999, 246436, 369323, 459437, 361142, 66231, 246454, 361147, 402118, 500423, 303818, 565962, 99024, 74457, 107226, 99039, 320232, 279278, 262895, 99054, 328430, 123633, 377588, 336628, 303863, 164602, 492282, 492284, 500477, 500478, 82688, 353027, 82696, 90891, 271116, 197388, 785, 336658, 303893, 361238, 353051, 82715, 295713, 369442, 377635, 287527, 99114, 426795, 25386, 25393, 25394, 17207, 508730, 213830, 492362, 107339, 90956, 172877, 238410, 25424, 426836, 500565, 50006, 410456, 574297, 557916, 254814, 369503, 525155, 33638, 872, 549738, 574315, 451435, 99182, 459634, 885, 377723, 82812, 410496, 295809, 312192, 82821, 369541, 172935, 467848, 459662, 410510, 172946, 74646, 328601, 353180, 263068, 222118, 99242, 140203, 312237, 517056, 345027, 517069, 173008, 394199, 25560, 476119, 394206, 33759, 50145, 17379, 156643, 1000, 320490, 500716, 74733, 140270, 58350, 508917, 533493, 279541, 140286, 484351, 173057, 25603, 435205, 435206, 41990, 435208, 566282, 369675, 164883, 164885, 58393, 197658, 427034, 17436, 148508, 410650, 459809, 443426, 394275, 558114, 361506, 189475, 549930, 82986, 271402, 484404, 304180, 476215, 574520, 181303, 33854, 484415, 427077, 541773, 361551, 42070, 509014, 410712, 377946, 476258, 246883, 312421, 74860, 271471, 410735, 361586, 42102, 287874, 451714, 320642, 558213, 66706, 369812, 50326, 427160, 468124, 115870, 337055, 9378, 566436, 345252, 312489, 58539, 181421, 165039, 214192, 279730, 246963, 459954, 148662, 402615, 9400, 320696, 115898, 246968, 206025, 50380, 66771, 492758, 17627, 279774, 83172, 320743, 9448, 312552, 115946, 263403, 304365, 574702, 197870, 353518, 148719, 1268, 173302, 427256, 222458, 181499, 566524, 156924, 476415, 410880, 263425, 361730, 148739, 378116, 9483, 140556, 501005, 394510, 91406, 1296, 345361, 345356, 304404, 132375, 378139, 296222, 296224, 402720, 181542, 140583, 451879, 345385, 288042, 296231, 386352, 345397, 132408, 189752, 533816, 394559, 66886, 1353, 427338, 107851, 402765, 189775, 58705, 329041, 558421, 402774, 34139, 222559, 140640, 476514, 116068, 91495, 574823, 468332, 91500, 460147, 157046, 279927, 9590, 345466, 378244, 492937, 312720, 181666, 230819, 492968, 378284, 542127, 394677, 361919, 132544, 443844, 550349, 50638, 1490, 509403, 99810, 17899, 132587, 116208, 17905, 108026, 255483, 263679, 329219, 148999, 509451, 214539, 222735, 468501, 534041, 468505, 124442, 484893, 370208, 42528, 17959, 140840, 9769, 9772, 460333, 1584, 255536, 419379, 190007, 181816, 460347, 443969, 230983, 206411, 83531, 419408, 230993, 83540, 378454, 26204, 370270, 132703, 468577, 476770, 575081, 329323, 67180, 34417, 484978, 501368, 50811, 271997, 42628, 427655, 566923, 67213, 165518, 378515, 34452, 206487, 468632, 9891, 485027, 59044, 239274, 304812, 288430, 214703, 403122, 157365, 140987, 190140, 132796, 321214, 394940, 214720, 370375, 296649, 313034, 485071, 296657, 575187, 231125, 542423, 116439, 108253, 1761, 214753, 567011, 493286, 173799, 149222, 18150, 67310, 444142, 329456, 329455, 67315, 206579, 239347, 534270, 50943, 255749, 173830, 558854, 272136, 182021, 575243, 18193, 272148, 263966, 263969, 550691, 165681, 378673, 321333, 370486, 550714, 386879, 132931, 329542, 288584, 67406, 214869, 345941, 198489, 75612, 313182, 386912, 26465, 190307, 198510, 124798, 149375, 493442, 133000, 411530, 460683, 182155, 329614, 100238, 92053, 567197, 157601, 452515, 231339, 395180, 255917, 288685, 239537, 92091, 18380, 67534, 108495, 223182, 223188, 2006, 108503, 468954, 427997, 468965, 370677, 206838, 378873, 354307, 370711, 362520, 67616, 215072, 460841, 477227, 174123, 542776, 559160, 18491, 157756, 297022, 84031, 149568, 26690, 157767, 215114, 469067, 100428, 534605, 428111, 231508, 18519, 288862, 329827, 239717, 477288, 485480, 2153, 411754, 403565, 313454, 247917, 51314, 346232, 395388, 370813, 133244, 411774, 403584, 297084, 419974, 280710, 542856, 510095, 534673, 231580, 239773, 100510, 305309, 305317, 460967, 182441, 411817, 190637, 452784, 272566, 518326, 362682, 297147, 428218, 256192, 469192, 125129, 84170, 280779, 493772, 59598, 461009, 190676, 2261, 313562, 215259, 362716, 133343, 420069, 157928, 239857, 354547, 313588, 59635, 35062, 559348, 2299, 469246, 321790, 92416, 477441, 149770, 198928, 84241, 100624, 166165, 190753, 411938, 289059, 190756, 174371, 493864, 133418, 338219, 534827, 84270, 551215, 248112, 411953, 43314, 395575, 280891, 26941, 231747, 125257, 493905, 18770, 182611, 280918, 264535, 567640, 371042, 280930, 141671, 395633, 100723, 510329, 190841, 35197, 2431, 338304, 190853, 526728, 297353, 453001, 84362, 436617, 199055, 18837, 240023, 502168, 51610, 428454, 2473, 43435, 240049, 559543, 420281, 559547, 567740, 133567, 379332, 289222, 231879, 281032, 305609, 207306, 190923, 289229, 117197, 35279, 297427, 485844, 10707, 248284, 2532, 477689, 223738, 68093, 84477, 141821, 51712, 436738, 223747, 10764, 84492, 248334, 551439, 428562, 158227, 182805, 395801, 576031, 125472, 191013, 453166, 27186, 576052, 535094, 109118, 289343, 502336, 199236, 166478, 346703, 248400, 567886, 297562, 338532, 297578, 494188, 477805, 518770, 322163, 240250, 297595, 2685, 412286, 395903, 76416, 330369, 125572, 289415, 289417, 182923, 199310, 436883, 60052, 37988, 330396, 19109, 215723, 117425, 76468, 527029, 363188, 60090, 133819, 338624, 338625, 84674, 60102, 363207, 412362, 101068, 150224, 223955, 223959, 486104, 486112, 297698, 51938, 199395, 559842, 273132, 117492, 150265, 109313, 76547, 477955, 256775, 51976, 264968, 535306, 92939, 199442, 117525, 19221, 404249, 68387, 52007, 43816, 248616, 11051, 273198, 52017, 191288, 68409, 289594, 314177, 281409, 469828, 281414, 371529, 387916, 273232, 76625, 133969, 568147, 158548, 559956, 183127, 346968, 166747, 371552, 35682, 256868, 527215, 166768, 551794, 224119, 551804, 199551, 568195, 314251, 551820, 11149, 117645, 150417, 568213, 314264, 142238, 396200, 248752, 461751, 355257, 60347, 11197, 158660, 19402, 289741, 183246, 502737, 437205, 117719, 306136, 388056, 338905, 306139, 224222, 568290, 535523, 207844, 19432, 420840, 248810, 125936, 117744, 371699, 142324, 437239, 355325, 404484, 166918, 273420, 68628, 158744, 371749, 486438, 347174, 519208, 27696, 396338, 322610, 420916, 429109, 560178, 576566, 535608, 257084, 330818, 527427, 453708, 93261, 224337, 437331, 3156, 273493, 281687, 199771, 60507, 183391, 85089, 511076, 437351, 150638, 232563, 347254, 568439, 27768, 150649, 388215, 191614, 347265, 142472, 183437, 576654, 257169, 289938, 175251, 117908, 363666, 281754, 126107, 167067, 126110, 281759, 445602, 44195, 322724, 85157, 494759, 527528, 93353, 289960, 134322, 3255, 191672, 126137, 52413, 421060, 404678, 232649, 183500, 462031, 453841, 167122, 478420, 216277, 412894, 158945, 396518, 216296, 347370, 158956, 232684, 232692, 44279, 11511, 142585, 93437, 527616, 306437, 568584, 437514, 126226, 494869, 445722, 52507, 142620, 273711, 322864, 535858, 273715, 363840, 494913, 27972, 404805, 281929, 19786, 109900, 85329, 314709, 560474, 257370, 249180, 183648, 273760, 445792, 363875, 191845, 404839, 52591, 290163, 183675, 85376, 322944, 290179, 527750, 568710, 445834, 60823, 511384, 224664, 183709, 224675, 183716, 109992, 11699, 454067, 282037, 404922, 576955, 404923, 216516, 257478, 142790, 290248, 224724, 19924, 60886, 151000, 110042, 3553, 60899, 536038, 355817, 208363, 568814, 290293, 478721, 60932, 519688, 151051, 306700, 331280, 93717, 257566, 462371, 208423, 224807, 495146, 44590, 445999, 265777, 331317, 167486, 396863, 364102, 421455, 265816, 257624, 69213, 364126, 118367, 396903, 69224, 511599, 429690, 142971, 372349, 118405, 36494, 478862, 274066, 167572, 568981, 429718, 77460, 52891, 511647, 159399, 85682, 282298, 36539, 544444, 323263, 429761, 569030, 134856, 405195, 306893, 413395, 413404, 143068, 569059, 200421, 134886, 69356, 388846, 560880, 470773, 470779, 446206, 356094, 405249, 52996, 454404, 544519, 85772, 560911, 511760, 233238, 323355, 356125, 405279, 380706, 388903, 380711, 249643, 274219, 315187, 36660, 462643, 388927, 552775, 520009, 257865, 397133, 44877, 61268, 331604, 12120, 3934, 274272, 372577, 257896, 20333, 339823, 413552, 110449, 421757, 462728, 552842, 470924, 479126, 356248, 233370, 176037, 470952, 323496, 479155, 151480, 569273, 249786, 102331, 528314, 503755, 94157, 102356, 397279, 307172, 94185, 61418, 274411, 471023, 380913, 389109, 397303, 12280, 413689, 430073, 511999, 577539, 184324, 241668, 102411, 241677, 45070, 364557, 528399, 479248, 331799, 290843, 274460, 438304, 45090, 356387, 4134, 397351, 331817, 397354, 471087, 503855, 159791, 462904, 184384, 561223, 36936, 520264, 356424, 356427, 356428, 389197, 151629, 372819, 20571, 192607, 315492, 561256, 151657, 127092, 495732, 94326, 225405, 110721, 520324, 200839, 118921, 454798, 61584, 356505, 192670, 266400, 323751, 266409, 356531, 446651, 192699, 504000, 110784, 528578, 143556, 389316, 217285, 86220, 192716, 143572, 323799, 545007, 135410, 233727, 200961, 356612, 553221, 504074, 160012, 151820, 250127, 274708, 53529, 250137, 127263, 12576, 184611, 127270, 430377, 233771, 4395, 119088, 61747, 323895, 217400, 28993, 528705, 209222, 463174, 577864, 389451, 545100, 414034, 258388, 364884, 78170, 463199, 12639, 201072, 397681, 53624, 53626, 12670, 151938, 577932, 168337, 102805, 94614, 110999, 151962, 389532, 127394, 102820, 577959, 250282, 455085, 381360, 135604, 201148, 545219, 192964, 12748, 86483, 520659, 414170, 176606, 569825, 340451, 258541, 111086, 45550, 455157, 438774, 20992, 29187, 520707, 61960, 471567, 266768, 45596, 94751, 299553, 553511, 365095, 127530, 578093, 455219, 512564, 389684, 86582, 152120, 143931, 324158, 332351, 537153, 373315, 78404, 504389, 119365, 438862, 70229, 143961, 438876, 504415, 111207, 373353, 70254, 447088, 406129, 275058, 569972, 569976, 209530, 438907, 520832, 144003, 283268, 455301, 373382, 193162, 266892, 512657, 184978, 381587, 119445, 316054, 94871, 152214, 365208, 53909, 193181, 4765, 176799, 463522, 324258, 479912, 438955, 127660, 21167, 414385, 389812, 283318, 463542, 537270, 553669, 381639, 201418, 398028, 471756, 520910, 348881, 201426, 479953, 447187, 29397, 135890, 176857, 119516, 193245, 135902, 291551, 94944, 529122, 86755, 78565, 266981, 488166, 258793, 242411, 471789, 144114, 250619, 529148, 275198, 463618, 553731, 176901, 512776, 504589, 422670, 217872, 480021, 455448, 496409, 332570, 291619, 37670, 561958, 160556, 414510, 553776, 291634, 422706, 37689, 545594, 488251, 553788, 258883, 512836, 193348, 463690, 447314, 471893, 119641, 209753, 209757, 258911, 226147, 226154, 299887, 430961, 463730, 357238, 37751, 177015, 13177, 398203, 283520, 455555, 5001, 439180, 62353, 406417, 13201, 54164, 193429, 62355, 78748, 398237, 340894, 267169, 185250, 537506, 512929, 209829, 177065, 144300, 455597, 5037, 201646, 86956, 95155, 422836, 521141, 168883, 267191, 578489, 463802, 496571, 275392, 5060, 308165, 455624, 373705, 185292, 144333, 291791, 365521, 414673, 496597, 160728, 512985, 46048, 422886, 463849, 447465, 13291, 578545, 316404, 242678, 111609, 78843, 87038, 349184, 160772, 553990, 324614, 300039, 168974, 513041, 554002, 381971, 480275, 250901, 259097, 234526, 562207, 13348, 242724, 398377, 521259, 332845, 463918, 562229, 382009, 177213, 562243, 78915, 5193, 365642, 414795, 570448, 357459, 406611, 70739, 422998, 365655, 160864, 21604, 332901, 341094, 570471, 226408, 87144, 308328, 119911, 398438, 390246, 152686, 234607, 210032, 226417, 128112, 169076, 447611, 103548, 185472, 185473, 439426, 283785, 193674, 136334, 488592, 382111, 38048, 79014, 308394, 570539, 554156, 382125, 46252, 365745, 193717, 79031, 292024, 119995, 423104, 87244, 177357, 341196, 193743, 169169, 423123, 496854, 464089, 488673, 439522, 537827, 62692, 439525, 38118, 578792, 472298, 13546, 292082, 300276, 455937, 242946, 513283, 251140, 488710, 161032, 562448, 267537, 464144, 202001, 554266, 29984, 374052, 275749, 521509, 570664, 439593, 103723, 300341, 210230, 578871, 292155, 423229, 365886, 54592, 308545, 38210, 374083, 54593, 570688, 218439, 54605, 21839, 456015, 177489, 554328, 62808, 243034, 13659, 210273, 529762, 54628, 226662, 161128, 357737, 308587, 357742, 128372, 357748, 21879, 210299, 79229, 54654, 46463, 292225, 177539, 570756, 193926, 537991, 292236, 169356, 21903, 144784, 562581, 398742, 308631, 5529, 349594, 390555, 46497, 13729, 439715, 325031, 546219, 447917, 87470, 153011, 87476, 357816, 136633, 431545, 243148, 13774, 570834, 538067, 210388, 406997, 5586, 210394, 407002, 128476, 341469, 439773, 112110, 226802, 259571, 202228, 513524, 521717, 579070, 357888, 243204, 136715, 259597, 529939, 513567, 185890, 144932, 407083, 513580, 439854, 472623, 276018, 489014, 259640, 398905, 276024, 308793, 292415, 63047, 448076, 431693, 423506, 554579, 276055, 226903, 144984, 333402, 521819, 464476, 357978, 185950, 292446, 374369, 202339, 554595, 120420, 472678, 292456, 259690, 505451, 456303, 161397, 95862, 538236, 145020, 562818, 292488, 153229, 128654, 530061, 54931, 128675, 349860, 480936, 390826, 112298, 546475, 341681, 63154, 251572, 54967, 186042, 439994, 128699, 497344, 423617, 177861, 136915, 341719, 480985, 55002, 268000, 325347, 521956, 79588, 431848, 235241, 579307, 128748, 55022, 554735, 530162, 259830, 390902, 579321, 538364, 448256, 407298, 431876, 448263, 177934, 259854, 374545, 38678, 46872, 284445, 505638, 30504, 415536, 456496, 350002, 350003, 358195, 276285, 350019, 341828, 350023, 161609, 489305, 538458, 22371, 546659, 210789, 399205, 440171, 325483, 448365, 55150, 456559, 218997, 440184, 489339, 55167, 571264, 14226, 464786, 137106, 6040, 448410, 546717, 497568, 341921, 194471, 350122, 38829, 251824, 333745, 309173, 153527, 464824, 153529, 505789, 497599, 399296, 350148, 22479, 276434, 432085, 341973, 456662, 210915, 391140, 104424, 415727, 161781, 317433, 415748, 301061, 546823, 161799, 47112, 260106, 169996, 440336, 284698, 473118, 71711, 137246, 473121, 129062, 555050, 292908, 579635, 284725, 563267, 153669, 161861, 227399, 284743, 579655, 137294, 301135, 186449, 563281, 161875, 505942, 161879, 268378, 284764, 407646, 79969, 407650, 399462, 14439, 481386, 30828, 481390, 342128, 170099, 366711, 391290, 358525, 473219, 170116, 292997, 481413, 219271, 161925, 14473, 415882, 489611, 309391, 546964, 563349, 227478, 473237, 80022, 522393, 227482, 440475, 243867, 194716, 546976, 227491, 260261, 96427, 22705, 334006, 161978, 145597, 153797, 71877, 121031, 481480, 350405, 374982, 497867, 424135, 571598, 391375, 170191, 325838, 145620, 309467, 424162, 276707, 55528, 465129, 579818, 309484, 96493, 162035, 415990, 63740, 186624, 145665, 235778, 71938, 235784, 563470, 243989, 80153, 88345, 465179, 465180, 481567, 366884, 481573, 489764, 448810, 162092, 481582, 383289, 252219, 194875, 6460, 579902, 284991, 301376, 473406, 506178, 235836, 407868, 276804, 571718, 6471, 293200, 342367, 112997, 325991, 416104, 383337, 383339, 498032, 489842, 31093, 457078, 260470, 285047, 342397, 244099, 530820, 252294, 407943, 31118, 80273, 563604, 154004, 399764, 309655, 22935, 383384, 121242, 424349, 88485, 530854, 432553, 309678, 293300, 268729, 563648, 489924, 563653, 514508, 571857, 47571, 80340, 129492, 350679, 522713, 63965, 47585, 334309, 154087, 170474, 39405, 375278, 326128, 31217, 563702, 367095, 186873, 23034, 301563, 137727, 547336, 358923, 277005, 514586, 277020, 203294, 530975, 326174, 334371, 391722, 317999, 408112, 408120, 178744, 227898, 96825, 39484, 39480, 334399, 31296, 121417, 424521, 555597, 334417, 113235, 64084, 506454, 23126, 416343, 72281, 31322, 367195, 531036, 252507, 580197, 424551, 326248, 6763, 162415, 6771, 170613, 383606, 47740, 203389, 367228, 39551, 236166, 522889, 465549, 55950, 252559, 334483, 301718, 121497, 563882, 400044, 375469, 187055, 334521, 47801, 490171, 318138, 531134, 531135, 424642, 416451, 334530, 375493, 580294, 47819, 309964, 47828, 211674, 334555, 129756, 146155, 514797, 6894, 154358, 121591, 293625, 432898, 187144, 473869, 88848, 244496, 80659, 236308, 129812, 162581, 523033, 252701, 80671, 506656, 449312, 400161, 178982, 6954, 301867, 252716, 105264, 465718, 154425, 260925, 326462, 23359, 269121, 580418, 121673, 506707, 457559, 523100, 383838, 383842, 252776, 39785, 187243, 203629, 211825, 187249, 228214, 88951, 203639, 105335, 351096, 564091, 334719, 138115, 31620, 88970, 236426, 326541, 465806, 326542, 121744, 449432, 129945, 465822, 441247, 293794, 474021, 179112, 261036, 162732, 465836, 334767, 7088, 474028, 146358, 474039, 342971, 179141, 441286, 261061, 170955, 64462, 433103, 515025, 474078, 556000, 187362, 482275, 179174, 15335, 261097, 39914, 474095, 89078, 261116, 97278, 269316, 515077, 64523, 547854, 424975, 482319, 39951, 244750, 490515, 154644, 48153, 146457, 302107, 56350, 80932, 162858, 449579, 572462, 547886, 433204, 506933, 474167, 113720, 236599, 97337, 498747, 367680, 179265, 449603, 31817, 203864, 72795, 154718, 244833, 441442, 40036, 343149, 7278, 564336, 7281, 359540, 498807, 457848, 408696, 441468, 449661, 556158, 482436, 507015, 384136, 40083, 72852, 441491, 203931, 457884, 507037, 556193, 343218, 474293, 171190, 400573, 122046, 187585, 285894, 441543, 212166, 408774, 367818, 261318, 572620, 466125, 64718, 89296, 441553, 474344, 146667, 539883, 15597, 163057, 441586, 531707, 359677, 212226, 195842, 425221, 425226, 425227, 48396, 515350, 482585, 376093, 179487, 245026, 32038, 351530, 15660, 163117, 163118, 376112, 122166, 539962, 326970, 458045, 269632, 32081, 130386, 187734, 499031, 7511, 507223, 23899, 64868, 122217, 433515, 302452, 449909, 171382, 515445, 48504, 458109, 114049, 64898, 146825, 376206, 97679, 138639, 425361, 146831, 548246, 359833, 204186, 400794, 343453, 261535, 400803, 220584, 48555, 400815, 482735, 48564, 105912, 490936, 163257, 179642, 73153, 105923, 581062, 343496, 302536, 253386, 294350, 384468, 24021, 24027, 335328, 417249, 572900, 212453, 343524, 286182, 499181, 458223, 482800, 81394, 163314, 376307, 548339, 515577, 515579, 491008, 376322, 417285, 343561, 155145, 458255, 237071, 392722, 130579, 130586, 450075, 523807, 130599, 204329, 376365, 196141, 89648, 220732, 237118, 245311, 351810, 499266, 245320, 228942, 310862, 351823, 507473, 491090, 32334, 15956, 458325, 581206, 187990, 368212, 532058, 171611, 220764, 212573, 89697, 261732, 482917, 409198, 491130, 409211, 319100, 97924, 7816, 327306, 130699, 384666, 343706, 450202, 384670, 360097, 368294, 466602, 548524, 24243, 523957, 220858, 81594, 179898, 97988, 581317, 245448, 360137, 548555, 491213, 155341, 319184, 286422, 311002, 138979, 474854, 425702, 163562, 581357, 122606, 171757, 515828, 229111, 433915, 343803, 540414, 253695, 261888, 450303, 65288, 130826, 171788, 507667, 302882, 286503, 384808, 7977, 270122, 180011, 294695, 253742, 122672, 376625, 540466, 442161, 565045, 40757, 163640, 32570, 286523, 433980, 73533, 57150, 212800, 139077, 65350, 81738, 573258, 8021, 286553, 196442, 139099, 401244, 261982, 450399, 393056, 417632, 163682, 401250, 16228, 229216, 491366, 16249, 253819, 343937, 409475, 393093, 180101, 188296, 319369, 253835, 311180, 515982, 302990, 507797, 311190, 393115, 262048, 163746, 49060, 499622, 180135, 343976, 327592, 548780, 65455, 294831, 327601, 425906, 327605, 475064, 327617, 442306, 286660, 425925, 516038, 409542, 491464, 147415, 270297, 344029, 32735, 73702, 229358, 98287, 417779, 24567, 450559]
11004
[532481, 458755, 385029, 311303, 393226, 532493, 8211, 327701, 188439, 434204, 401446, 213033, 466986, 213035, 319534, 516143, 32817, 532530, 188465, 434230, 475191, 254016, 131138, 16451, 81988, 376900, 507975, 434247, 204871, 516173, 122962, 98392, 442456, 32861, 213086, 442463, 311392, 311394, 49259, 221291, 442480, 368752, 319607, 417911, 32887, 450686, 32901, 270474, 139, 180383, 82085, 385190, 524456, 90284, 32941, 188592, 229553, 278705, 213171, 336053, 549055, 114884, 508101, 65736, 303305, 344268, 532690, 360661, 16598, 73946, 114907, 426203, 278749, 516318, 229601, 295138, 467176, 319721, 352491, 33005, 458992, 475387, 393469, 57597, 426241, 540932, 106757, 65798, 180487, 213255, 147725, 418062, 147729, 377113, 229659, 147740, 426268, 434459, 205105, 565563, 278848, 368961, 352582, 57672, 74058, 123213, 33104, 336209, 180560, 483667, 8532, 270677, 262487, 491867, 475484, 393569, 549220, 336232, 74092, 467315, 131444, 434548, 532855, 442746, 541055, 426376, 336265, 303499, 369037, 459153, 295316, 377239, 508312, 98716, 106912, 254368, 57760, 156071, 352684, 156076, 475572, 459195, 262587, 238013, 278973, 541123, 33221, 401862, 303566, 508370, 442836, 74200, 229849, 25057, 451043, 336356, 131556, 262631, 205289, 8690, 66038, 352760, 516601, 295420, 360960, 25096, 459272, 205324, 451084, 549390, 180751, 74256, 565778, 205333, 377368, 172571, 500257, 270883, 303653, 98853, 213547, 115245, 500270, 492077, 328238, 377393, 524850, 254516, 295478, 467511, 221754, 287291, 229948, 270908, 516677, 451144, 172617, 492110, 451155, 107094, 123480, 205401, 213593, 33368, 25181, 565853, 49759, 139872, 303713, 213605, 172648, 557672, 172649, 287347, 565877, 230008, 311928, 156292, 8844, 25228, 377486, 361103, 328337, 533145, 369310, 483999, 246436, 369323, 459437, 361142, 66231, 246454, 361147, 402118, 500423, 303818, 565962, 99024, 74457, 107226, 99039, 320232, 279278, 262895, 99054, 328430, 123633, 377588, 336628, 303863, 164602, 492282, 492284, 500477, 500478, 82688, 353027, 82696, 90891, 271116, 197388, 785, 336658, 303893, 361238, 353051, 82715, 295713, 369442, 377635, 287527, 99114, 426795, 25386, 25393, 25394, 17207, 508730, 213830, 492362, 107339, 90956, 172877, 238410, 25424, 426836, 500565, 50006, 410456, 574297, 557916, 254814, 369503, 525155, 33638, 872, 549738, 574315, 451435, 99182, 459634, 885, 377723, 82812, 410496, 295809, 312192, 82821, 369541, 172935, 467848, 459662, 410510, 172946, 74646, 328601, 353180, 263068, 222118, 99242, 140203, 312237, 517056, 345027, 517069, 173008, 394199, 25560, 476119, 394206, 33759, 50145, 17379, 156643, 1000, 320490, 500716, 74733, 140270, 58350, 508917, 533493, 279541, 140286, 484351, 173057, 25603, 435205, 435206, 41990, 435208, 566282, 369675, 164883, 164885, 58393, 197658, 427034, 17436, 148508, 410650, 459809, 443426, 394275, 558114, 361506, 189475, 549930, 82986, 271402, 484404, 304180, 476215, 574520, 181303, 33854, 484415, 427077, 541773, 361551, 42070, 509014, 410712, 377946, 476258, 246883, 312421, 74860, 271471, 410735, 361586, 42102, 287874, 451714, 320642, 558213, 66706, 369812, 50326, 427160, 468124, 115870, 337055, 9378, 566436, 345252, 312489, 58539, 181421, 165039, 214192, 279730, 246963, 459954, 148662, 402615, 9400, 320696, 115898, 246968, 206025, 50380, 66771, 492758, 17627, 279774, 83172, 320743, 9448, 312552, 115946, 263403, 304365, 574702, 197870, 353518, 148719, 1268, 173302, 427256, 222458, 181499, 566524, 156924, 476415, 410880, 263425, 361730, 148739, 378116, 9483, 140556, 501005, 394510, 91406, 1296, 345361, 345356, 304404, 132375, 378139, 296222, 296224, 402720, 181542, 140583, 451879, 345385, 288042, 296231, 386352, 345397, 132408, 189752, 533816, 394559, 66886, 1353, 427338, 107851, 402765, 189775, 58705, 329041, 558421, 402774, 34139, 222559, 140640, 476514, 116068, 91495, 574823, 468332, 91500, 460147, 157046, 279927, 9590, 345466, 378244, 492937, 312720, 181666, 230819, 492968, 378284, 542127, 394677, 361919, 132544, 443844, 550349, 50638, 1490, 509403, 99810, 17899, 132587, 116208, 17905, 108026, 255483, 263679, 329219, 148999, 509451, 214539, 222735, 468501, 534041, 468505, 124442, 484893, 370208, 42528, 17959, 140840, 9769, 9772, 460333, 1584, 255536, 419379, 190007, 181816, 460347, 443969, 230983, 206411, 83531, 419408, 230993, 83540, 378454, 26204, 370270, 132703, 468577, 476770, 575081, 329323, 67180, 34417, 484978, 501368, 50811, 271997, 42628, 427655, 566923, 67213, 165518, 378515, 34452, 206487, 468632, 9891, 485027, 59044, 239274, 304812, 288430, 214703, 403122, 157365, 140987, 190140, 132796, 321214, 394940, 214720, 370375, 296649, 313034, 485071, 296657, 575187, 231125, 542423, 116439, 108253, 1761, 214753, 567011, 493286, 173799, 149222, 18150, 67310, 444142, 329456, 329455, 67315, 206579, 239347, 534270, 50943, 255749, 173830, 558854, 272136, 182021, 575243, 18193, 272148, 263966, 263969, 550691, 165681, 378673, 321333, 370486, 550714, 386879, 132931, 329542, 288584, 67406, 214869, 345941, 198489, 75612, 313182, 386912, 26465, 190307, 198510, 124798, 149375, 493442, 133000, 411530, 460683, 182155, 329614, 100238, 92053, 567197, 157601, 452515, 231339, 395180, 255917, 288685, 239537, 92091, 18380, 67534, 108495, 223182, 223188, 2006, 108503, 468954, 427997, 468965, 370677, 206838, 378873, 354307, 370711, 362520, 67616, 215072, 460841, 477227, 174123, 542776, 559160, 18491, 157756, 297022, 84031, 149568, 26690, 157767, 215114, 469067, 100428, 534605, 428111, 231508, 18519, 288862, 329827, 239717, 477288, 485480, 2153, 411754, 403565, 313454, 247917, 51314, 346232, 395388, 370813, 133244, 411774, 403584, 297084, 419974, 280710, 542856, 510095, 534673, 231580, 239773, 100510, 305309, 305317, 460967, 182441, 411817, 190637, 452784, 272566, 518326, 362682, 297147, 428218, 256192, 469192, 125129, 84170, 280779, 493772, 59598, 461009, 190676, 2261, 313562, 215259, 362716, 133343, 420069, 157928, 239857, 354547, 313588, 59635, 35062, 559348, 2299, 469246, 321790, 92416, 477441, 149770, 198928, 84241, 100624, 166165, 190753, 411938, 289059, 190756, 174371, 493864, 133418, 338219, 534827, 84270, 551215, 248112, 411953, 43314, 395575, 280891, 26941, 231747, 125257, 493905, 18770, 182611, 280918, 264535, 567640, 371042, 280930, 141671, 395633, 100723, 510329, 190841, 35197, 2431, 338304, 190853, 526728, 297353, 453001, 84362, 436617, 199055, 18837, 240023, 502168, 51610, 428454, 2473, 43435, 240049, 559543, 420281, 559547, 567740, 133567, 379332, 289222, 231879, 281032, 305609, 207306, 190923, 289229, 117197, 35279, 297427, 485844, 10707, 248284, 2532, 477689, 223738, 68093, 84477, 141821, 51712, 436738, 223747, 10764, 84492, 248334, 551439, 428562, 158227, 182805, 395801, 576031, 125472, 191013, 453166, 27186, 576052, 535094, 109118, 289343, 502336, 199236, 166478, 346703, 248400, 567886, 297562, 338532, 297578, 494188, 477805, 518770, 322163, 240250, 297595, 2685, 412286, 395903, 76416, 330369, 125572, 289415, 289417, 182923, 199310, 436883, 60052, 37988, 330396, 19109, 215723, 117425, 76468, 527029, 363188, 60090, 133819, 338624, 338625, 84674, 60102, 363207, 412362, 101068, 150224, 223955, 223959, 486104, 486112, 297698, 51938, 199395, 559842, 273132, 117492, 150265, 109313, 76547, 477955, 256775, 51976, 264968, 535306, 92939, 199442, 117525, 19221, 404249, 68387, 52007, 43816, 248616, 11051, 273198, 52017, 191288, 68409, 289594, 314177, 281409, 469828, 281414, 371529, 387916, 273232, 76625, 133969, 568147, 158548, 559956, 183127, 346968, 166747, 371552, 35682, 256868, 527215, 166768, 551794, 224119, 551804, 199551, 568195, 314251, 551820, 11149, 117645, 150417, 568213, 314264, 142238, 396200, 248752, 461751, 355257, 60347, 11197, 158660, 19402, 289741, 183246, 502737, 437205, 117719, 306136, 388056, 338905, 306139, 224222, 568290, 535523, 207844, 19432, 420840, 248810, 125936, 117744, 371699, 142324, 437239, 355325, 404484, 166918, 273420, 68628, 158744, 371749, 486438, 347174, 519208, 27696, 396338, 322610, 420916, 429109, 560178, 576566, 535608, 257084, 330818, 527427, 453708, 93261, 224337, 437331, 3156, 273493, 281687, 199771, 60507, 183391, 85089, 511076, 437351, 150638, 232563, 347254, 568439, 27768, 150649, 388215, 191614, 347265, 142472, 183437, 576654, 257169, 289938, 175251, 117908, 363666, 281754, 126107, 167067, 126110, 281759, 445602, 44195, 322724, 85157, 494759, 527528, 93353, 289960, 134322, 3255, 191672, 126137, 52413, 421060, 404678, 232649, 183500, 462031, 453841, 167122, 478420, 216277, 412894, 158945, 396518, 216296, 347370, 158956, 232684, 232692, 44279, 11511, 142585, 93437, 527616, 306437, 568584, 437514, 126226, 494869, 445722, 52507, 142620, 273711, 322864, 535858, 273715, 363840, 494913, 27972, 404805, 281929, 19786, 109900, 85329, 314709, 560474, 257370, 249180, 183648, 273760, 445792, 363875, 191845, 404839, 52591, 290163, 183675, 85376, 322944, 290179, 527750, 568710, 445834, 60823, 511384, 224664, 183709, 224675, 183716, 109992, 11699, 454067, 282037, 404922, 576955, 404923, 216516, 257478, 142790, 290248, 224724, 19924, 60886, 151000, 110042, 3553, 60899, 536038, 355817, 208363, 568814, 290293, 478721, 60932, 519688, 151051, 306700, 331280, 93717, 257566, 462371, 208423, 224807, 495146, 44590, 445999, 265777, 331317, 167486, 396863, 364102, 421455, 265816, 257624, 69213, 364126, 118367, 396903, 69224, 511599, 429690, 142971, 372349, 118405, 36494, 478862, 274066, 167572, 568981, 429718, 77460, 52891, 511647, 159399, 85682, 282298, 36539, 544444, 323263, 429761, 569030, 134856, 405195, 306893, 413395, 413404, 143068, 569059, 200421, 134886, 69356, 388846, 560880, 470773, 470779, 446206, 356094, 405249, 52996, 454404, 544519, 85772, 560911, 511760, 233238, 323355, 356125, 405279, 380706, 388903, 380711, 249643, 274219, 315187, 36660, 462643, 388927, 552775, 520009, 257865, 397133, 44877, 61268, 331604, 12120, 3934, 274272, 372577, 257896, 20333, 339823, 413552, 110449, 421757, 462728, 552842, 470924, 479126, 356248, 233370, 176037, 470952, 323496, 479155, 151480, 569273, 249786, 102331, 528314, 503755, 94157, 102356, 397279, 307172, 94185, 61418, 274411, 471023, 380913, 389109, 397303, 12280, 413689, 430073, 511999, 577539, 184324, 241668, 102411, 241677, 45070, 364557, 528399, 479248, 331799, 290843, 274460, 438304, 45090, 356387, 4134, 397351, 331817, 397354, 471087, 503855, 159791, 462904, 184384, 561223, 36936, 520264, 356424, 356427, 356428, 389197, 151629, 372819, 20571, 192607, 315492, 561256, 151657, 127092, 495732, 94326, 225405, 110721, 520324, 200839, 118921, 454798, 61584, 356505, 192670, 266400, 323751, 266409, 356531, 446651, 192699, 504000, 110784, 528578, 143556, 389316, 217285, 86220, 192716, 143572, 323799, 545007, 135410, 233727, 200961, 356612, 553221, 504074, 160012, 151820, 250127, 274708, 53529, 250137, 127263, 12576, 184611, 127270, 430377, 233771, 4395, 119088, 61747, 323895, 217400, 28993, 528705, 209222, 463174, 577864, 389451, 545100, 414034, 258388, 364884, 78170, 463199, 12639, 201072, 397681, 53624, 53626, 12670, 151938, 577932, 168337, 102805, 94614, 110999, 151962, 389532, 127394, 102820, 577959, 250282, 455085, 381360, 135604, 201148, 545219, 192964, 12748, 86483, 520659, 414170, 176606, 569825, 340451, 258541, 111086, 45550, 455157, 438774, 20992, 29187, 520707, 61960, 471567, 266768, 45596, 94751, 299553, 553511, 365095, 127530, 578093, 455219, 512564, 389684, 86582, 152120, 143931, 324158, 332351, 537153, 373315, 78404, 504389, 119365, 438862, 70229, 143961, 438876, 504415, 111207, 373353, 70254, 447088, 406129, 275058, 569972, 569976, 209530, 438907, 520832, 144003, 283268, 455301, 373382, 193162, 266892, 512657, 184978, 381587, 119445, 316054, 94871, 152214, 365208, 53909, 193181, 4765, 176799, 463522, 324258, 479912, 438955, 127660, 21167, 414385, 389812, 283318, 463542, 537270, 553669, 381639, 201418, 398028, 471756, 520910, 348881, 201426, 479953, 447187, 29397, 135890, 176857, 119516, 193245, 135902, 291551, 94944, 529122, 86755, 78565, 266981, 488166, 258793, 242411, 471789, 144114, 250619, 529148, 275198, 463618, 553731, 176901, 512776, 504589, 422670, 217872, 480021, 455448, 496409, 332570, 291619, 37670, 561958, 160556, 414510, 553776, 291634, 422706, 37689, 545594, 488251, 553788, 258883, 512836, 193348, 463690, 447314, 471893, 119641, 209753, 209757, 258911, 226147, 226154, 299887, 430961, 463730, 357238, 37751, 177015, 13177, 398203, 283520, 455555, 5001, 439180, 62353, 406417, 13201, 54164, 193429, 62355, 78748, 398237, 340894, 267169, 185250, 537506, 512929, 209829, 177065, 144300, 455597, 5037, 201646, 86956, 95155, 422836, 521141, 168883, 267191, 578489, 463802, 496571, 275392, 5060, 308165, 455624, 373705, 185292, 144333, 291791, 365521, 414673, 496597, 160728, 512985, 46048, 422886, 463849, 447465, 13291, 578545, 316404, 242678, 111609, 78843, 87038, 349184, 160772, 553990, 324614, 300039, 168974, 513041, 554002, 381971, 480275, 250901, 259097, 234526, 562207, 13348, 242724, 398377, 521259, 332845, 463918, 562229, 382009, 177213, 562243, 78915, 5193, 365642, 414795, 570448, 357459, 406611, 70739, 422998, 365655, 160864, 21604, 332901, 341094, 570471, 226408, 87144, 308328, 119911, 398438, 390246, 152686, 234607, 210032, 226417, 128112, 169076, 447611, 103548, 185472, 185473, 439426, 283785, 193674, 136334, 488592, 382111, 38048, 79014, 308394, 570539, 554156, 382125, 46252, 365745, 193717, 79031, 292024, 119995, 423104, 87244, 177357, 341196, 193743, 169169, 423123, 496854, 464089, 488673, 439522, 537827, 62692, 439525, 38118, 578792, 472298, 13546, 292082, 300276, 455937, 242946, 513283, 251140, 488710, 161032, 562448, 267537, 464144, 202001, 554266, 29984, 374052, 275749, 521509, 570664, 439593, 103723, 300341, 210230, 578871, 292155, 423229, 365886, 54592, 308545, 38210, 374083, 54593, 570688, 218439, 54605, 21839, 456015, 177489, 554328, 62808, 243034, 13659, 210273, 529762, 54628, 226662, 161128, 357737, 308587, 357742, 128372, 357748, 21879, 210299, 79229, 54654, 46463, 292225, 177539, 570756, 193926, 537991, 292236, 169356, 21903, 144784, 562581, 398742, 308631, 5529, 349594, 390555, 46497, 13729, 439715, 325031, 546219, 447917, 87470, 153011, 87476, 357816, 136633, 431545, 243148, 13774, 570834, 538067, 210388, 406997, 5586, 210394, 407002, 128476, 341469, 439773, 112110, 226802, 259571, 202228, 513524, 521717, 579070, 357888, 243204, 136715, 259597, 529939, 513567, 185890, 144932, 407083, 513580, 439854, 472623, 276018, 489014, 259640, 398905, 276024, 308793, 292415, 63047, 448076, 431693, 423506, 554579, 276055, 226903, 144984, 333402, 521819, 464476, 357978, 185950, 292446, 374369, 202339, 554595, 120420, 472678, 292456, 259690, 505451, 456303, 161397, 95862, 538236, 145020, 562818, 292488, 153229, 128654, 530061, 54931, 128675, 349860, 480936, 390826, 112298, 546475, 341681, 63154, 251572, 54967, 186042, 439994, 128699, 497344, 423617, 177861, 136915, 341719, 480985, 55002, 268000, 325347, 521956, 79588, 431848, 235241, 579307, 128748, 55022, 554735, 530162, 259830, 390902, 579321, 538364, 448256, 407298, 431876, 448263, 177934, 259854, 374545, 38678, 46872, 284445, 505638, 30504, 415536, 456496, 350002, 350003, 358195, 276285, 350019, 341828, 350023, 161609, 489305, 538458, 22371, 546659, 210789, 399205, 440171, 325483, 448365, 55150, 456559, 218997, 440184, 489339, 55167, 571264, 14226, 464786, 137106, 6040, 448410, 546717, 497568, 341921, 194471, 350122, 38829, 251824, 333745, 309173, 153527, 464824, 153529, 505789, 497599, 399296, 350148, 22479, 276434, 432085, 341973, 456662, 210915, 391140, 104424, 415727, 161781, 317433, 415748, 301061, 546823, 161799, 47112, 260106, 169996, 440336, 284698, 473118, 71711, 137246, 473121, 129062, 555050, 292908, 579635, 284725, 563267, 153669, 161861, 227399, 284743, 579655, 137294, 301135, 186449, 563281, 161875, 505942, 161879, 268378, 284764, 407646, 79969, 407650, 399462, 14439, 481386, 30828, 481390, 342128, 170099, 366711, 391290, 358525, 473219, 170116, 292997, 481413, 219271, 161925, 14473, 415882, 489611, 309391, 546964, 563349, 227478, 473237, 80022, 522393, 227482, 440475, 243867, 194716, 546976, 227491, 260261, 96427, 22705, 334006, 161978, 145597, 153797, 71877, 121031, 481480, 350405, 374982, 497867, 424135, 571598, 391375, 170191, 325838, 145620, 309467, 424162, 276707, 55528, 465129, 579818, 309484, 96493, 162035, 415990, 63740, 186624, 145665, 235778, 71938, 235784, 563470, 243989, 80153, 88345, 465179, 465180, 481567, 366884, 481573, 489764, 448810, 162092, 481582, 383289, 252219, 194875, 6460, 579902, 284991, 301376, 473406, 506178, 235836, 407868, 276804, 571718, 6471, 293200, 342367, 112997, 325991, 416104, 383337, 383339, 498032, 489842, 31093, 457078, 260470, 285047, 342397, 244099, 530820, 252294, 407943, 31118, 80273, 563604, 154004, 399764, 309655, 22935, 383384, 121242, 424349, 88485, 530854, 432553, 309678, 293300, 268729, 563648, 489924, 563653, 514508, 571857, 47571, 80340, 129492, 350679, 522713, 63965, 47585, 334309, 154087, 170474, 39405, 375278, 326128, 31217, 563702, 367095, 186873, 23034, 301563, 137727, 547336, 358923, 277005, 514586, 277020, 203294, 530975, 326174, 334371, 391722, 317999, 408112, 408120, 178744, 227898, 96825, 39484, 39480, 334399, 31296, 121417, 424521, 555597, 334417, 113235, 64084, 506454, 23126, 416343, 72281, 31322, 367195, 531036, 252507, 580197, 424551, 326248, 6763, 162415, 6771, 170613, 383606, 47740, 203389, 367228, 39551, 236166, 522889, 465549, 55950, 252559, 334483, 301718, 121497, 563882, 400044, 375469, 187055, 334521, 47801, 490171, 318138, 531134, 531135, 424642, 416451, 334530, 375493, 580294, 47819, 309964, 47828, 211674, 334555, 129756, 146155, 514797, 6894, 154358, 121591, 293625, 432898, 187144, 473869, 88848, 244496, 80659, 236308, 129812, 162581, 523033, 252701, 80671, 506656, 449312, 400161, 178982, 6954, 301867, 252716, 105264, 465718, 154425, 260925, 326462, 23359, 269121, 580418, 121673, 506707, 457559, 523100, 383838, 383842, 252776, 39785, 187243, 203629, 211825, 187249, 228214, 88951, 203639, 105335, 351096, 564091, 334719, 138115, 31620, 88970, 236426, 326541, 465806, 326542, 121744, 449432, 129945, 465822, 441247, 293794, 474021, 179112, 261036, 162732, 465836, 334767, 7088, 474028, 146358, 474039, 342971, 179141, 441286, 261061, 170955, 64462, 433103, 515025, 474078, 556000, 187362, 482275, 179174, 15335, 261097, 39914, 474095, 89078, 261116, 97278, 269316, 515077, 64523, 547854, 424975, 482319, 39951, 244750, 490515, 154644, 48153, 146457, 302107, 56350, 80932, 162858, 449579, 572462, 547886, 433204, 506933, 474167, 113720, 236599, 97337, 498747, 367680, 179265, 449603, 31817, 203864, 72795, 154718, 244833, 441442, 40036, 343149, 7278, 564336, 7281, 359540, 498807, 457848, 408696, 441468, 449661, 556158, 482436, 507015, 384136, 40083, 72852, 441491, 203931, 457884, 507037, 556193, 343218, 474293, 171190, 400573, 122046, 187585, 285894, 441543, 212166, 408774, 367818, 261318, 572620, 466125, 64718, 89296, 441553, 474344, 146667, 539883, 15597, 163057, 441586, 531707, 359677, 212226, 195842, 425221, 425226, 425227, 48396, 515350, 482585, 376093, 179487, 245026, 32038, 351530, 15660, 163117, 163118, 376112, 122166, 539962, 326970, 458045, 269632, 32081, 130386, 187734, 499031, 7511, 507223, 23899, 64868, 122217, 433515, 302452, 449909, 171382, 515445, 48504, 458109, 114049, 64898, 146825, 376206, 97679, 138639, 425361, 146831, 548246, 359833, 204186, 400794, 343453, 261535, 400803, 220584, 48555, 400815, 482735, 48564, 105912, 490936, 163257, 179642, 73153, 105923, 581062, 343496, 302536, 253386, 294350, 384468, 24021, 24027, 335328, 417249, 572900, 212453, 343524, 286182, 499181, 458223, 482800, 81394, 163314, 376307, 548339, 515577, 515579, 491008, 376322, 417285, 343561, 155145, 458255, 237071, 392722, 130579, 130586, 450075, 523807, 130599, 204329, 376365, 196141, 89648, 220732, 237118, 245311, 351810, 499266, 245320, 228942, 310862, 351823, 507473, 491090, 32334, 15956, 458325, 581206, 187990, 368212, 532058, 171611, 220764, 212573, 89697, 261732, 482917, 409198, 491130, 409211, 319100, 97924, 7816, 327306, 130699, 384666, 343706, 450202, 384670, 360097, 368294, 466602, 548524, 24243, 523957, 220858, 81594, 179898, 97988, 581317, 245448, 360137, 548555, 491213, 155341, 319184, 286422, 311002, 138979, 474854, 425702, 163562, 581357, 122606, 171757, 515828, 229111, 433915, 343803, 540414, 253695, 261888, 450303, 65288, 130826, 171788, 507667, 302882, 286503, 384808, 7977, 270122, 180011, 294695, 253742, 122672, 376625, 540466, 442161, 565045, 40757, 163640, 32570, 286523, 433980, 73533, 57150, 212800, 139077, 65350, 81738, 573258, 8021, 286553, 196442, 139099, 401244, 261982, 450399, 393056, 417632, 163682, 401250, 16228, 229216, 491366, 16249, 253819, 343937, 409475, 393093, 180101, 188296, 319369, 253835, 311180, 515982, 302990, 507797, 311190, 393115, 262048, 163746, 49060, 499622, 180135, 343976, 327592, 548780, 65455, 294831, 327601, 425906, 327605, 475064, 327617, 442306, 286660, 425925, 516038, 409542, 491464, 147415, 270297, 344029, 32735, 73702, 229358, 98287, 417779, 24567, 450559]
11004
[532481, 458755, 385029, 311303, 393226, 532493, 8211, 327701, 188439, 434204, 401446, 213033, 466986, 213035, 319534, 516143, 32817, 532530, 188465, 434230, 475191, 254016, 131138, 16451, 81988, 376900, 507975, 434247, 204871, 516173, 122962, 98392, 442456, 32861, 213086, 442463, 311392, 311394, 49259, 221291, 442480, 368752, 319607, 417911, 32887, 450686, 32901, 270474, 139, 180383, 82085, 385190, 524456, 90284, 32941, 188592, 229553, 278705, 213171, 336053, 549055, 114884, 508101, 65736, 303305, 344268, 532690, 360661, 16598, 73946, 114907, 426203, 278749, 516318, 229601, 295138, 467176, 319721, 352491, 33005, 458992, 475387, 393469, 57597, 426241, 540932, 106757, 65798, 180487, 213255, 147725, 418062, 147729, 377113, 229659, 147740, 426268, 434459, 205105, 565563, 278848, 368961, 352582, 57672, 74058, 123213, 33104, 336209, 180560, 483667, 8532, 270677, 262487, 491867, 475484, 393569, 549220, 336232, 74092, 467315, 131444, 434548, 532855, 442746, 541055, 426376, 336265, 303499, 369037, 459153, 295316, 377239, 508312, 98716, 106912, 254368, 57760, 156071, 352684, 156076, 475572, 459195, 262587, 238013, 278973, 541123, 33221, 401862, 303566, 508370, 442836, 74200, 229849, 25057, 451043, 336356, 131556, 262631, 205289, 8690, 66038, 352760, 516601, 295420, 360960, 25096, 459272, 205324, 451084, 549390, 180751, 74256, 565778, 205333, 377368, 172571, 500257, 270883, 303653, 98853, 213547, 115245, 500270, 492077, 328238, 377393, 524850, 254516, 295478, 467511, 221754, 287291, 229948, 270908, 516677, 451144, 172617, 492110, 451155, 107094, 123480, 205401, 213593, 33368, 25181, 565853, 49759, 139872, 303713, 213605, 172648, 557672, 172649, 287347, 565877, 230008, 311928, 156292, 8844, 25228, 377486, 361103, 328337, 533145, 369310, 483999, 246436, 369323, 459437, 361142, 66231, 246454, 361147, 402118, 500423, 303818, 565962, 99024, 74457, 107226, 99039, 320232, 279278, 262895, 99054, 328430, 123633, 377588, 336628, 303863, 164602, 492282, 492284, 500477, 500478, 82688, 353027, 82696, 90891, 271116, 197388, 785, 336658, 303893, 361238, 353051, 82715, 295713, 369442, 377635, 287527, 99114, 426795, 25386, 25393, 25394, 17207, 508730, 213830, 492362, 107339, 90956, 172877, 238410, 25424, 426836, 500565, 50006, 410456, 574297, 557916, 254814, 369503, 525155, 33638, 872, 549738, 574315, 451435, 99182, 459634, 885, 377723, 82812, 410496, 295809, 312192, 82821, 369541, 172935, 467848, 459662, 410510, 172946, 74646, 328601, 353180, 263068, 222118, 99242, 140203, 312237, 517056, 345027, 517069, 173008, 394199, 25560, 476119, 394206, 33759, 50145, 17379, 156643, 1000, 320490, 500716, 74733, 140270, 58350, 508917, 533493, 279541, 140286, 484351, 173057, 25603, 435205, 435206, 41990, 435208, 566282, 369675, 164883, 164885, 58393, 197658, 427034, 17436, 148508, 410650, 459809, 443426, 394275, 558114, 361506, 189475, 549930, 82986, 271402, 484404, 304180, 476215, 574520, 181303, 33854, 484415, 427077, 541773, 361551, 42070, 509014, 410712, 377946, 476258, 246883, 312421, 74860, 271471, 410735, 361586, 42102, 287874, 451714, 320642, 558213, 66706, 369812, 50326, 427160, 468124, 115870, 337055, 9378, 566436, 345252, 312489, 58539, 181421, 165039, 214192, 279730, 246963, 459954, 148662, 402615, 9400, 320696, 115898, 246968, 206025, 50380, 66771, 492758, 17627, 279774, 83172, 320743, 9448, 312552, 115946, 263403, 304365, 574702, 197870, 353518, 148719, 1268, 173302, 427256, 222458, 181499, 566524, 156924, 476415, 410880, 263425, 361730, 148739, 378116, 9483, 140556, 501005, 394510, 91406, 1296, 345361, 345356, 304404, 132375, 378139, 296222, 296224, 402720, 181542, 140583, 451879, 345385, 288042, 296231, 386352, 345397, 132408, 189752, 533816, 394559, 66886, 1353, 427338, 107851, 402765, 189775, 58705, 329041, 558421, 402774, 34139, 222559, 140640, 476514, 116068, 91495, 574823, 468332, 91500, 460147, 157046, 279927, 9590, 345466, 378244, 492937, 312720, 181666, 230819, 492968, 378284, 542127, 394677, 361919, 132544, 443844, 550349, 50638, 1490, 509403, 99810, 17899, 132587, 116208, 17905, 108026, 255483, 263679, 329219, 148999, 509451, 214539, 222735, 468501, 534041, 468505, 124442, 484893, 370208, 42528, 17959, 140840, 9769, 9772, 460333, 1584, 255536, 419379, 190007, 181816, 460347, 443969, 230983, 206411, 83531, 419408, 230993, 83540, 378454, 26204, 370270, 132703, 468577, 476770, 575081, 329323, 67180, 34417, 484978, 501368, 50811, 271997, 42628, 427655, 566923, 67213, 165518, 378515, 34452, 206487, 468632, 9891, 485027, 59044, 239274, 304812, 288430, 214703, 403122, 157365, 140987, 190140, 132796, 321214, 394940, 214720, 370375, 296649, 313034, 485071, 296657, 575187, 231125, 542423, 116439, 108253, 1761, 214753, 567011, 493286, 173799, 149222, 18150, 67310, 444142, 329456, 329455, 67315, 206579, 239347, 534270, 50943, 255749, 173830, 558854, 272136, 182021, 575243, 18193, 272148, 263966, 263969, 550691, 165681, 378673, 321333, 370486, 550714, 386879, 132931, 329542, 288584, 67406, 214869, 345941, 198489, 75612, 313182, 386912, 26465, 190307, 198510, 124798, 149375, 493442, 133000, 411530, 460683, 182155, 329614, 100238, 92053, 567197, 157601, 452515, 231339, 395180, 255917, 288685, 239537, 92091, 18380, 67534, 108495, 223182, 223188, 2006, 108503, 468954, 427997, 468965, 370677, 206838, 378873, 354307, 370711, 362520, 67616, 215072, 460841, 477227, 174123, 542776, 559160, 18491, 157756, 297022, 84031, 149568, 26690, 157767, 215114, 469067, 100428, 534605, 428111, 231508, 18519, 288862, 329827, 239717, 477288, 485480, 2153, 411754, 403565, 313454, 247917, 51314, 346232, 395388, 370813, 133244, 411774, 403584, 297084, 419974, 280710, 542856, 510095, 534673, 231580, 239773, 100510, 305309, 305317, 460967, 182441, 411817, 190637, 452784, 272566, 518326, 362682, 297147, 428218, 256192, 469192, 125129, 84170, 280779, 493772, 59598, 461009, 190676, 2261, 313562, 215259, 362716, 133343, 420069, 157928, 239857, 354547, 313588, 59635, 35062, 559348, 2299, 469246, 321790, 92416, 477441, 149770, 198928, 84241, 100624, 166165, 190753, 411938, 289059, 190756, 174371, 493864, 133418, 338219, 534827, 84270, 551215, 248112, 411953, 43314, 395575, 280891, 26941, 231747, 125257, 493905, 18770, 182611, 280918, 264535, 567640, 371042, 280930, 141671, 395633, 100723, 510329, 190841, 35197, 2431, 338304, 190853, 526728, 297353, 453001, 84362, 436617, 199055, 18837, 240023, 502168, 51610, 428454, 2473, 43435, 240049, 559543, 420281, 559547, 567740, 133567, 379332, 289222, 231879, 281032, 305609, 207306, 190923, 289229, 117197, 35279, 297427, 485844, 10707, 248284, 2532, 477689, 223738, 68093, 84477, 141821, 51712, 436738, 223747, 10764, 84492, 248334, 551439, 428562, 158227, 182805, 395801, 576031, 125472, 191013, 453166, 27186, 576052, 535094, 109118, 289343, 502336, 199236, 166478, 346703, 248400, 567886, 297562, 338532, 297578, 494188, 477805, 518770, 322163, 240250, 297595, 2685, 412286, 395903, 76416, 330369, 125572, 289415, 289417, 182923, 199310, 436883, 60052, 37988, 330396, 19109, 215723, 117425, 76468, 527029, 363188, 60090, 133819, 338624, 338625, 84674, 60102, 363207, 412362, 101068, 150224, 223955, 223959, 486104, 486112, 297698, 51938, 199395, 559842, 273132, 117492, 150265, 109313, 76547, 477955, 256775, 51976, 264968, 535306, 92939, 199442, 117525, 19221, 404249, 68387, 52007, 43816, 248616, 11051, 273198, 52017, 191288, 68409, 289594, 314177, 281409, 469828, 281414, 371529, 387916, 273232, 76625, 133969, 568147, 158548, 559956, 183127, 346968, 166747, 371552, 35682, 256868, 527215, 166768, 551794, 224119, 551804, 199551, 568195, 314251, 551820, 11149, 117645, 150417, 568213, 314264, 142238, 396200, 248752, 461751, 355257, 60347, 11197, 158660, 19402, 289741, 183246, 502737, 437205, 117719, 306136, 388056, 338905, 306139, 224222, 568290, 535523, 207844, 19432, 420840, 248810, 125936, 117744, 371699, 142324, 437239, 355325, 404484, 166918, 273420, 68628, 158744, 371749, 486438, 347174, 519208, 27696, 396338, 322610, 420916, 429109, 560178, 576566, 535608, 257084, 330818, 527427, 453708, 93261, 224337, 437331, 3156, 273493, 281687, 199771, 60507, 183391, 85089, 511076, 437351, 150638, 232563, 347254, 568439, 27768, 150649, 388215, 191614, 347265, 142472, 183437, 576654, 257169, 289938, 175251, 117908, 363666, 281754, 126107, 167067, 126110, 281759, 445602, 44195, 322724, 85157, 494759, 527528, 93353, 289960, 134322, 3255, 191672, 126137, 52413, 421060, 404678, 232649, 183500, 462031, 453841, 167122, 478420, 216277, 412894, 158945, 396518, 216296, 347370, 158956, 232684, 232692, 44279, 11511, 142585, 93437, 527616, 306437, 568584, 437514, 126226, 494869, 445722, 52507, 142620, 273711, 322864, 535858, 273715, 363840, 494913, 27972, 404805, 281929, 19786, 109900, 85329, 314709, 560474, 257370, 249180, 183648, 273760, 445792, 363875, 191845, 404839, 52591, 290163, 183675, 85376, 322944, 290179, 527750, 568710, 445834, 60823, 511384, 224664, 183709, 224675, 183716, 109992, 11699, 454067, 282037, 404922, 576955, 404923, 216516, 257478, 142790, 290248, 224724, 19924, 60886, 151000, 110042, 3553, 60899, 536038, 355817, 208363, 568814, 290293, 478721, 60932, 519688, 151051, 306700, 331280, 93717, 257566, 462371, 208423, 224807, 495146, 44590, 445999, 265777, 331317, 167486, 396863, 364102, 421455, 265816, 257624, 69213, 364126, 118367, 396903, 69224, 511599, 429690, 142971, 372349, 118405, 36494, 478862, 274066, 167572, 568981, 429718, 77460, 52891, 511647, 159399, 85682, 282298, 36539, 544444, 323263, 429761, 569030, 134856, 405195, 306893, 413395, 413404, 143068, 569059, 200421, 134886, 69356, 388846, 560880, 470773, 470779, 446206, 356094, 405249, 52996, 454404, 544519, 85772, 560911, 511760, 233238, 323355, 356125, 405279, 380706, 388903, 380711, 249643, 274219, 315187, 36660, 462643, 388927, 552775, 520009, 257865, 397133, 44877, 61268, 331604, 12120, 3934, 274272, 372577, 257896, 20333, 339823, 413552, 110449, 421757, 462728, 552842, 470924, 479126, 356248, 233370, 176037, 470952, 323496, 479155, 151480, 569273, 249786, 102331, 528314, 503755, 94157, 102356, 397279, 307172, 94185, 61418, 274411, 471023, 380913, 389109, 397303, 12280, 413689, 430073, 511999, 577539, 184324, 241668, 102411, 241677, 45070, 364557, 528399, 479248, 331799, 290843, 274460, 438304, 45090, 356387, 4134, 397351, 331817, 397354, 471087, 503855, 159791, 462904, 184384, 561223, 36936, 520264, 356424, 356427, 356428, 389197, 151629, 372819, 20571, 192607, 315492, 561256, 151657, 127092, 495732, 94326, 225405, 110721, 520324, 200839, 118921, 454798, 61584, 356505, 192670, 266400, 323751, 266409, 356531, 446651, 192699, 504000, 110784, 528578, 143556, 389316, 217285, 86220, 192716, 143572, 323799, 545007, 135410, 233727, 200961, 356612, 553221, 504074, 160012, 151820, 250127, 274708, 53529, 250137, 127263, 12576, 184611, 127270, 430377, 233771, 4395, 119088, 61747, 323895, 217400, 28993, 528705, 209222, 463174, 577864, 389451, 545100, 414034, 258388, 364884, 78170, 463199, 12639, 201072, 397681, 53624, 53626, 12670, 151938, 577932, 168337, 102805, 94614, 110999, 151962, 389532, 127394, 102820, 577959, 250282, 455085, 381360, 135604, 201148, 545219, 192964, 12748, 86483, 520659, 414170, 176606, 569825, 340451, 258541, 111086, 45550, 455157, 438774, 20992, 29187, 520707, 61960, 471567, 266768, 45596, 94751, 299553, 553511, 365095, 127530, 578093, 455219, 512564, 389684, 86582, 152120, 143931, 324158, 332351, 537153, 373315, 78404, 504389, 119365, 438862, 70229, 143961, 438876, 504415, 111207, 373353, 70254, 447088, 406129, 275058, 569972, 569976, 209530, 438907, 520832, 144003, 283268, 455301, 373382, 193162, 266892, 512657, 184978, 381587, 119445, 316054, 94871, 152214, 365208, 53909, 193181, 4765, 176799, 463522, 324258, 479912, 438955, 127660, 21167, 414385, 389812, 283318, 463542, 537270, 553669, 381639, 201418, 398028, 471756, 520910, 348881, 201426, 479953, 447187, 29397, 135890, 176857, 119516, 193245, 135902, 291551, 94944, 529122, 86755, 78565, 266981, 488166, 258793, 242411, 471789, 144114, 250619, 529148, 275198, 463618, 553731, 176901, 512776, 504589, 422670, 217872, 480021, 455448, 496409, 332570, 291619, 37670, 561958, 160556, 414510, 553776, 291634, 422706, 37689, 545594, 488251, 553788, 258883, 512836, 193348, 463690, 447314, 471893, 119641, 209753, 209757, 258911, 226147, 226154, 299887, 430961, 463730, 357238, 37751, 177015, 13177, 398203, 283520, 455555, 5001, 439180, 62353, 406417, 13201, 54164, 193429, 62355, 78748, 398237, 340894, 267169, 185250, 537506, 512929, 209829, 177065, 144300, 455597, 5037, 201646, 86956, 95155, 422836, 521141, 168883, 267191, 578489, 463802, 496571, 275392, 5060, 308165, 455624, 373705, 185292, 144333, 291791, 365521, 414673, 496597, 160728, 512985, 46048, 422886, 463849, 447465, 13291, 578545, 316404, 242678, 111609, 78843, 87038, 349184, 160772, 553990, 324614, 300039, 168974, 513041, 554002, 381971, 480275, 250901, 259097, 234526, 562207, 13348, 242724, 398377, 521259, 332845, 463918, 562229, 382009, 177213, 562243, 78915, 5193, 365642, 414795, 570448, 357459, 406611, 70739, 422998, 365655, 160864, 21604, 332901, 341094, 570471, 226408, 87144, 308328, 119911, 398438, 390246, 152686, 234607, 210032, 226417, 128112, 169076, 447611, 103548, 185472, 185473, 439426, 283785, 193674, 136334, 488592, 382111, 38048, 79014, 308394, 570539, 554156, 382125, 46252, 365745, 193717, 79031, 292024, 119995, 423104, 87244, 177357, 341196, 193743, 169169, 423123, 496854, 464089, 488673, 439522, 537827, 62692, 439525, 38118, 578792, 472298, 13546, 292082, 300276, 455937, 242946, 513283, 251140, 488710, 161032, 562448, 267537, 464144, 202001, 554266, 29984, 374052, 275749, 521509, 570664, 439593, 103723, 300341, 210230, 578871, 292155, 423229, 365886, 54592, 308545, 38210, 374083, 54593, 570688, 218439, 54605, 21839, 456015, 177489, 554328, 62808, 243034, 13659, 210273, 529762, 54628, 226662, 161128, 357737, 308587, 357742, 128372, 357748, 21879, 210299, 79229, 54654, 46463, 292225, 177539, 570756, 193926, 537991, 292236, 169356, 21903, 144784, 562581, 398742, 308631, 5529, 349594, 390555, 46497, 13729, 439715, 325031, 546219, 447917, 87470, 153011, 87476, 357816, 136633, 431545, 243148, 13774, 570834, 538067, 210388, 406997, 5586, 210394, 407002, 128476, 341469, 439773, 112110, 226802, 259571, 202228, 513524, 521717, 579070, 357888, 243204, 136715, 259597, 529939, 513567, 185890, 144932, 407083, 513580, 439854, 472623, 276018, 489014, 259640, 398905, 276024, 308793, 292415, 63047, 448076, 431693, 423506, 554579, 276055, 226903, 144984, 333402, 521819, 464476, 357978, 185950, 292446, 374369, 202339, 554595, 120420, 472678, 292456, 259690, 505451, 456303, 161397, 95862, 538236, 145020, 562818, 292488, 153229, 128654, 530061, 54931, 128675, 349860, 480936, 390826, 112298, 546475, 341681, 63154, 251572, 54967, 186042, 439994, 128699, 497344, 423617, 177861, 136915, 341719, 480985, 55002, 268000, 325347, 521956, 79588, 431848, 235241, 579307, 128748, 55022, 554735, 530162, 259830, 390902, 579321, 538364, 448256, 407298, 431876, 448263, 177934, 259854, 374545, 38678, 46872, 284445, 505638, 30504, 415536, 456496, 350002, 350003, 358195, 276285, 350019, 341828, 350023, 161609, 489305, 538458, 22371, 546659, 210789, 399205, 440171, 325483, 448365, 55150, 456559, 218997, 440184, 489339, 55167, 571264, 14226, 464786, 137106, 6040, 448410, 546717, 497568, 341921, 194471, 350122, 38829, 251824, 333745, 309173, 153527, 464824, 153529, 505789, 497599, 399296, 350148, 22479, 276434, 432085, 341973, 456662, 210915, 391140, 104424, 415727, 161781, 317433, 415748, 301061, 546823, 161799, 47112, 260106, 169996, 440336, 284698, 473118, 71711, 137246, 473121, 129062, 555050, 292908, 579635, 284725, 563267, 153669, 161861, 227399, 284743, 579655, 137294, 301135, 186449, 563281, 161875, 505942, 161879, 268378, 284764, 407646, 79969, 407650, 399462, 14439, 481386, 30828, 481390, 342128, 170099, 366711, 391290, 358525, 473219, 170116, 292997, 481413, 219271, 161925, 14473, 415882, 489611, 309391, 546964, 563349, 227478, 473237, 80022, 522393, 227482, 440475, 243867, 194716, 546976, 227491, 260261, 96427, 22705, 334006, 161978, 145597, 153797, 71877, 121031, 481480, 350405, 374982, 497867, 424135, 571598, 391375, 170191, 325838, 145620, 309467, 424162, 276707, 55528, 465129, 579818, 309484, 96493, 162035, 415990, 63740, 186624, 145665, 235778, 71938, 235784, 563470, 243989, 80153, 88345, 465179, 465180, 481567, 366884, 481573, 489764, 448810, 162092, 481582, 383289, 252219, 194875, 6460, 579902, 284991, 301376, 473406, 506178, 235836, 407868, 276804, 571718, 6471, 293200, 342367, 112997, 325991, 416104, 383337, 383339, 498032, 489842, 31093, 457078, 260470, 285047, 342397, 244099, 530820, 252294, 407943, 31118, 80273, 563604, 154004, 399764, 309655, 22935, 383384, 121242, 424349, 88485, 530854, 432553, 309678, 293300, 268729, 563648, 489924, 563653, 514508, 571857, 47571, 80340, 129492, 350679, 522713, 63965, 47585, 334309, 154087, 170474, 39405, 375278, 326128, 31217, 563702, 367095, 186873, 23034, 301563, 137727, 547336, 358923, 277005, 514586, 277020, 203294, 530975, 326174, 334371, 391722, 317999, 408112, 408120, 178744, 227898, 96825, 39484, 39480, 334399, 31296, 121417, 424521, 555597, 334417, 113235, 64084, 506454, 23126, 416343, 72281, 31322, 367195, 531036, 252507, 580197, 424551, 326248, 6763, 162415, 6771, 170613, 383606, 47740, 203389, 367228, 39551, 236166, 522889, 465549, 55950, 252559, 334483, 301718, 121497, 563882, 400044, 375469, 187055, 334521, 47801, 490171, 318138, 531134, 531135, 424642, 416451, 334530, 375493, 580294, 47819, 309964, 47828, 211674, 334555, 129756, 146155, 514797, 6894, 154358, 121591, 293625, 432898, 187144, 473869, 88848, 244496, 80659, 236308, 129812, 162581, 523033, 252701, 80671, 506656, 449312, 400161, 178982, 6954, 301867, 252716, 105264, 465718, 154425, 260925, 326462, 23359, 269121, 580418, 121673, 506707, 457559, 523100, 383838, 383842, 252776, 39785, 187243, 203629, 211825, 187249, 228214, 88951, 203639, 105335, 351096, 564091, 334719, 138115, 31620, 88970, 236426, 326541, 465806, 326542, 121744, 449432, 129945, 465822, 441247, 293794, 474021, 179112, 261036, 162732, 465836, 334767, 7088, 474028, 146358, 474039, 342971, 179141, 441286, 261061, 170955, 64462, 433103, 515025, 474078, 556000, 187362, 482275, 179174, 15335, 261097, 39914, 474095, 89078, 261116, 97278, 269316, 515077, 64523, 547854, 424975, 482319, 39951, 244750, 490515, 154644, 48153, 146457, 302107, 56350, 80932, 162858, 449579, 572462, 547886, 433204, 506933, 474167, 113720, 236599, 97337, 498747, 367680, 179265, 449603, 31817, 203864, 72795, 154718, 244833, 441442, 40036, 343149, 7278, 564336, 7281, 359540, 498807, 457848, 408696, 441468, 449661, 556158, 482436, 507015, 384136, 40083, 72852, 441491, 203931, 457884, 507037, 556193, 343218, 474293, 171190, 400573, 122046, 187585, 285894, 441543, 212166, 408774, 367818, 261318, 572620, 466125, 64718, 89296, 441553, 474344, 146667, 539883, 15597, 163057, 441586, 531707, 359677, 212226, 195842, 425221, 425226, 425227, 48396, 515350, 482585, 376093, 179487, 245026, 32038, 351530, 15660, 163117, 163118, 376112, 122166, 539962, 326970, 458045, 269632, 32081, 130386, 187734, 499031, 7511, 507223, 23899, 64868, 122217, 433515, 302452, 449909, 171382, 515445, 48504, 458109, 114049, 64898, 146825, 376206, 97679, 138639, 425361, 146831, 548246, 359833, 204186, 400794, 343453, 261535, 400803, 220584, 48555, 400815, 482735, 48564, 105912, 490936, 163257, 179642, 73153, 105923, 581062, 343496, 302536, 253386, 294350, 384468, 24021, 24027, 335328, 417249, 572900, 212453, 343524, 286182, 499181, 458223, 482800, 81394, 163314, 376307, 548339, 515577, 515579, 491008, 376322, 417285, 343561, 155145, 458255, 237071, 392722, 130579, 130586, 450075, 523807, 130599, 204329, 376365, 196141, 89648, 220732, 237118, 245311, 351810, 499266, 245320, 228942, 310862, 351823, 507473, 491090, 32334, 15956, 458325, 581206, 187990, 368212, 532058, 171611, 220764, 212573, 89697, 261732, 482917, 409198, 491130, 409211, 319100, 97924, 7816, 327306, 130699, 384666, 343706, 450202, 384670, 360097, 368294, 466602, 548524, 24243, 523957, 220858, 81594, 179898, 97988, 581317, 245448, 360137, 548555, 491213, 155341, 319184, 286422, 311002, 138979, 474854, 425702, 163562, 581357, 122606, 171757, 515828, 229111, 433915, 343803, 540414, 253695, 261888, 450303, 65288, 130826, 171788, 507667, 302882, 286503, 384808, 7977, 270122, 180011, 294695, 253742, 122672, 376625, 540466, 442161, 565045, 40757, 163640, 32570, 286523, 433980, 73533, 57150, 212800, 139077, 65350, 81738, 573258, 8021, 286553, 196442, 139099, 401244, 261982, 450399, 393056, 417632, 163682, 401250, 16228, 229216, 491366, 16249, 253819, 343937, 409475, 393093, 180101, 188296, 319369, 253835, 311180, 515982, 302990, 507797, 311190, 393115, 262048, 163746, 49060, 499622, 180135, 343976, 327592, 548780, 65455, 294831, 327601, 425906, 327605, 475064, 327617, 442306, 286660, 425925, 516038, 409542, 491464, 147415, 270297, 344029, 32735, 73702, 229358, 98287, 417779, 24567, 450559]
11004
{'segmentation': [[125.12, 539.69, 140.94, 522.43, 100.67, 496.54, 84.85, 469.21, 73.35, 450.52, 104.99, 342.65, 168.27, 290.88, 179.78, 288, 189.84, 286.56, 191.28, 260.67, 202.79, 240.54, 221.48, 237.66, 248.81, 243.42, 257.44, 256.36, 253.12, 262.11, 253.12, 275.06, 299.15, 233.35, 329.35, 207.46, 355.24, 206.02, 363.87, 206.02, 365.3, 210.34, 373.93, 221.84, 363.87, 226.16, 363.87, 237.66, 350.92, 237.66, 332.22, 234.79, 314.97, 249.17, 271.82, 313.89, 253.12, 326.83, 227.24, 352.72, 214.29, 357.03, 212.85, 372.85, 208.54, 395.87, 228.67, 414.56, 245.93, 421.75, 266.07, 424.63, 276.13, 437.57, 266.07, 450.52, 284.76, 464.9, 286.2, 479.28, 291.96, 489.35, 310.65, 512.36, 284.76, 549.75, 244.49, 522.43, 215.73, 546.88, 199.91, 558.38, 204.22, 565.57, 189.84, 568.45, 184.09, 575.64, 172.58, 578.52, 145.26, 567.01, 117.93, 551.19, 133.75, 532.49]], 'num_keypoints': 10, 'area': 47803.27955, 'iscrowd': 0, 'keypoints': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 309, 1, 177, 320, 2, 191, 398, 2, 237, 317, 2, 233, 426, 2, 306, 233, 2, 92, 452, 2, 123, 468, 2, 0, 0, 0, 251, 469, 2, 0, 0, 0, 162, 551, 2], 'image_id': 425226, 'bbox': [73.35, 206.02, 300.58, 372.5], 'category_id': 1, 'id': 183126}
11004
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 309, 1, 177, 320, 2, 191, 398, 2, 237, 317, 2, 233, 426, 2, 306, 233, 2, 92, 452, 2, 123, 468, 2, 0, 0, 0, 251, 469, 2, 0, 0, 0, 162, 551, 2]
11004
<class 'list'>
11004
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 309, 1, 177, 320, 2, 191, 398, 2, 237, 317, 2, 233, 426, 2, 306, 233, 2, 92, 452, 2, 123, 468, 2, 0, 0, 0, 251, 469, 2, 0, 0, 0, 162, 551, 2]
11004
2693
11004
2693
2693
11004
2693
2693
11004
11004
2693
11004
11004
2693
11004
11004
2693
11004
11004
2693
11004
11004
2693
11004
11004
2693
11004
1
2693
11004
1
2693
11004
1
2693
11004
11004
532481
2693
11004
11004
loading annotations into memory...
Done (t=4.26s)
creating index...
index created!
<torch.utils.data.dataloader.DataLoader object at 0x7fd1652eac10>
<__main__.CustomDataset object at 0x7fd09f1bd1f0>
HRNet(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): Bottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (2): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (3): Bottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (transition1): ModuleList(
    (0): Sequential(
      (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (1): Sequential(
      (0): Sequential(
        (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (stage2): Sequential(
    (0): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential()
        )
      )
      (relu): ReLU(inplace=True)
    )
  )
  (transition2): ModuleList(
    (0): Sequential()
    (1): Sequential()
    (2): Sequential(
      (0): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (stage3): Sequential(
    (0): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (2): Sequential(
            (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential()
          (2): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
        )
        (2): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential()
        )
      )
      (relu): ReLU(inplace=True)
    )
    (1): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (2): Sequential(
            (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential()
          (2): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
        )
        (2): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential()
        )
      )
      (relu): ReLU(inplace=True)
    )
    (2): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (2): Sequential(
            (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential()
          (2): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
        )
        (2): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential()
        )
      )
      (relu): ReLU(inplace=True)
    )
    (3): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (2): Sequential(
            (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential()
          (2): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
        )
        (2): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential()
        )
      )
      (relu): ReLU(inplace=True)
    )
  )
  (transition3): ModuleList(
    (0): Sequential()
    (1): Sequential()
    (2): Sequential()
    (3): Sequential(
      (0): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (stage4): Sequential(
    (0): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (2): Sequential(
            (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
          (3): Sequential(
            (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=8.0, mode=nearest)
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential()
          (2): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (3): Sequential(
            (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
        )
        (2): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential()
          (3): Sequential(
            (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
        )
        (3): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (2): Sequential(
              (0): Conv2d(32, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential(
            (0): Sequential(
              (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): Sequential()
        )
      )
      (relu): ReLU(inplace=True)
    )
    (1): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (2): Sequential(
            (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
          (3): Sequential(
            (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=8.0, mode=nearest)
          )
        )
        (1): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential()
          (2): Sequential(
            (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (3): Sequential(
            (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
        )
        (2): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential()
          (3): Sequential(
            (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
        )
        (3): ModuleList(
          (0): Sequential(
            (0): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (2): Sequential(
              (0): Conv2d(32, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): Sequential(
            (0): Sequential(
              (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): Sequential()
        )
      )
      (relu): ReLU(inplace=True)
    )
    (2): StageModule(
      (branches): ModuleList(
        (0): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (2): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): Sequential(
          (0): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (3): BasicBlock(
            (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (fuse_layers): ModuleList(
        (0): ModuleList(
          (0): Sequential()
          (1): Sequential(
            (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=2.0, mode=nearest)
          )
          (2): Sequential(
            (0): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=4.0, mode=nearest)
          )
          (3): Sequential(
            (0): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): Upsample(scale_factor=8.0, mode=nearest)
          )
        )
      )
      (relu): ReLU(inplace=True)
    )
  )
  (final_layer): Conv2d(32, 17, kernel_size=(1, 1), stride=(1, 1))
)
tensor([[[[4.5432e-05, 5.8931e-05, 6.6087e-05,  ..., 2.1144e-02,
           3.9909e-02, 8.9112e-02],
          [4.5432e-05, 4.5432e-05, 9.1957e-05,  ..., 3.0069e-02,
           1.4188e-02, 4.3760e-02],
          [4.5432e-05, 4.5432e-05, 4.5432e-05,  ..., 3.7740e-03,
           1.5442e-04, 1.8646e-02],
          ...,
          [2.6128e-05, 3.8166e-05, 3.4933e-05,  ..., 3.0374e-05,
           3.9659e-05, 4.1734e-05],
          [4.2228e-05, 4.5432e-05, 4.5051e-05,  ..., 3.9974e-05,
           4.1925e-05, 4.3641e-05],
          [4.6603e-05, 4.5432e-05, 4.5432e-05,  ..., 4.0037e-05,
           4.3389e-05, 4.6699e-05]],
         [[4.7248e-05, 9.1127e-05, 1.1439e-04,  ..., 1.7273e-02,
           6.5728e-02, 7.4829e-02],
          [4.7248e-05, 4.7248e-05, 1.9848e-04,  ..., 1.8313e-02,
           6.1608e-02, 6.8065e-02],
          [4.7248e-05, 4.7248e-05, 4.7248e-05,  ..., 4.9642e-04,
           9.4572e-03, 2.0360e-02],
          ...,
          [3.5464e-05, 4.2813e-05, 4.0839e-05,  ..., 4.6214e-05,
           4.3941e-05, 4.5106e-05],
          [4.5292e-05, 4.7248e-05, 4.7016e-05,  ..., 4.9996e-05,
           4.2269e-05, 4.3295e-05],
          [4.7457e-05, 4.7248e-05, 4.7248e-05,  ..., 4.9866e-05,
           4.2173e-05, 4.4314e-05]],
         [[1.6765e-05, 2.1270e-05, 2.3658e-05,  ..., 1.3639e-03,
           5.2762e-02, 5.8331e-02],
          [1.6765e-05, 1.6765e-05, 3.2291e-05,  ..., 2.5795e-03,
           3.6311e-02, 6.3963e-02],
          [1.6765e-05, 1.6765e-05, 1.6765e-05,  ..., 3.4521e-04,
           1.2187e-04, 1.4483e-03],
          ...,
          [9.5051e-06, 1.4033e-05, 1.2817e-05,  ..., 2.0685e-05,
           1.7139e-05, 1.8796e-05],
          [1.5560e-05, 1.6765e-05, 1.6622e-05,  ..., 2.0925e-05,
           1.8810e-05, 1.7737e-05],
          [1.7030e-05, 1.6765e-05, 1.6765e-05,  ..., 2.2616e-05,
           1.7306e-05, 2.1972e-05]],
         ...,
         [[1.3851e-04, 1.3677e-04, 1.3585e-04,  ..., 1.8441e-04,
           2.0589e-04, 1.8160e-04],
          [1.3851e-04, 1.3851e-04, 1.3251e-04,  ..., 1.4911e-04,
           2.1063e-04, 1.9117e-04],
          [1.3851e-04, 1.3851e-04, 1.3851e-04,  ..., 1.4783e-04,
           1.6133e-04, 1.8136e-04],
          ...,
          [6.0415e-04, 3.1376e-04, 3.9176e-04,  ..., 2.9059e-02,
           1.3435e-02, 2.0203e-02],
          [2.1580e-04, 1.3851e-04, 1.4769e-04,  ..., 2.5609e-02,
           2.0909e-02, 2.0692e-02],
          [2.6816e-04, 1.3851e-04, 1.3851e-04,  ..., 2.5845e-02,
           2.1000e-02, 2.8812e-02]],
         [[2.2938e-04, 2.2642e-04, 2.2485e-04,  ..., 2.4751e-04,
           2.8861e-04, 3.5162e-04],
          [2.2938e-04, 2.2938e-04, 2.1919e-04,  ..., 2.1061e-04,
           2.3259e-04, 2.9498e-04],
          [2.2938e-04, 2.2938e-04, 2.2938e-04,  ..., 2.2974e-04,
           2.3092e-04, 2.5265e-04],
          ...,
          [1.9166e-02, 7.3565e-03, 1.0529e-02,  ..., 2.3196e-02,
           1.1780e-02, 8.2866e-03],
          [3.3724e-03, 2.2938e-04, 6.0255e-04,  ..., 1.3991e-02,
           7.8016e-03, 4.8740e-03],
          [4.8239e-04, 2.2938e-04, 2.2938e-04,  ..., 1.2721e-02,
           7.8033e-03, 1.2760e-02]],
         [[1.5427e-04, 1.5274e-04, 1.5193e-04,  ..., 1.8200e-04,
           1.6429e-04, 2.2870e-04],
          [1.5427e-04, 1.5427e-04, 1.4899e-04,  ..., 1.1780e-04,
           9.5550e-05, 1.5398e-04],
          [1.5427e-04, 1.5427e-04, 1.5427e-04,  ..., 1.4766e-04,
           1.3420e-04, 1.6364e-04],
          ...,
          [1.8493e-02, 7.0562e-03, 1.0128e-02,  ..., 2.4495e-02,
           1.1304e-02, 7.9650e-03],
          [3.1980e-03, 1.5427e-04, 5.1566e-04,  ..., 1.3512e-02,
           7.4833e-03, 4.6722e-03],
          [3.7809e-04, 1.5427e-04, 1.5427e-04,  ..., 1.2263e-02,
           7.4684e-03, 5.1340e-03]]]], device='cuda:0',
       grad_fn=<ConvolutionBackward0>)
torch.Size([1, 17, 64, 48])
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
Cannot move to target thread (0xc193a5c0)
QObject::moveToThread: Current thread (0xc193a5c0) is not the object's thread (0xc1b69740).
